<div class="like-card">
  <div class="like-container">
    <button id="like-btn" class="like-button">
      👍 Like (<span id="like-value">0</span>)
    </button>
  </div>
</div>

<script is:inline>
  function setupLikeCounter() {
    const button = document.getElementById('like-btn')
    const valueSpan = document.getElementById('like-value')

    // 从 localStorage 读取点赞数和用户状态
    let likes = parseInt(localStorage.getItem('likes') || '0', 10)
    let alreadyLiked = localStorage.getItem('liked') === 'true'

    if (button && valueSpan) {
      valueSpan.textContent = likes.toString()

      if (alreadyLiked) {
        button.disabled = true
        button.textContent = `👍 Liked (${likes})`
      }

      button.onclick = function () {
        if (!alreadyLiked) {
          likes++
          valueSpan.textContent = likes.toString()
          localStorage.setItem('likes', likes.toString())
          localStorage.setItem('liked', 'true')

          button.disabled = true
          button.textContent = `👍 Liked (${likes})`
        }
      }
    }
  }

  setupLikeCounter()
  document.addEventListener('astro:page-load', setupLikeCounter)
</script>

<style>
  .like-card {
    border: 1px solid var(--border);
    width: 100%;
    height: 12rem;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 10px;
  }
  .like-container {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .like-button {
    background-color: var(--text-primary);
    color: var(--bg);
    border: none;
    font-family: var(--mono);
    font-size: var(--font-size-s);
    border-radius: 12px;
    cursor: pointer;
    width: 180px;
    height: 44px;
    transition: all 0.15s ease-in-out;
  }
  .like-button:hover:enabled {
    opacity: 0.9;
    transform: scale(1.05);
  }
  .like-button:disabled {
    background-color: gray;
    cursor: not-allowed;
  }
</style>
